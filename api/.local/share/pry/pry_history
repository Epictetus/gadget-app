User.all
exit
User.all
User.first
User.all
exit
User.all
user = User.all
user
user = User.first
user
user.destroy
User.first.destroy
User.all.destroy
User.all
User.first.destroy
User.all
q
exit
User.first
User.all
iq
User.first
exit
User.first
user = User.first
user.email = 'test1@exmaple.com'
user
user.save
exit
user = User.fist
user = User.first
user.email = 'test1@example.com'
exit
user = User.first
user.email = 'test1@example.com'
user.save
exit
user = User.first
user.email = 'test1@example.com'
user.save
exit
User.second
user = User.second
user.destroy
User.all
exit
user = User.second
user.delete
exit
user = User.second
user.destroy
user = User.second
user.destroy
user = User.second
user.destroy
user = User.second
user.destroy
User.all
exit
Rails.env
ENV['AWS_ACCESS_KEY_ID']
ENV['AWS_SECRET_ACCESS_KEY']
exit
User.second
exit
user = User.first
user
user.email = "test1@example.com"
user.save
exit
User.all
user = User.fifth
user.destroy
exit
Relationship.all
User.all
user = User.find_by(id: 14)
user.id = 2
use.save
user.save
User.second
user = User.third
user.id = 3
user.save
user = User.forth
user = User.fourth
user.id = 4
user.save
User.all
exit
Relationship.all
exit
Relationship.all
a = Relationship.first
a.destroy
exit
Relationship.all
user = Relationship.first
user = Relationship.second
user.destroy
Relationship.all
exit
user = User.fist
user = User.first
user.following
user.following.count
user = User.second
user.following.count
exit
user = User.first
user.following
exit
Post.all
exit
Post.all
exit
Post.all
User.all
user = User.first
user.posts
exit
Post.all
exit
Post.all
user.all
User.all
exit
Post.last
Post.last.images
Post.last.images.attached?
Post.first.images.attached?
Post.last.images.attached?
esit
exit
Post.all
Post.last.images
for_url(Post.last.images)
url_for(Post.last.images)
url_for
post = Post.last
url_for(post.images)
url_for(post)
post
post.attached?
post.images.attached?
url_for(post.images)
include Rails.application.route.url_helpers
include Rails.application.routes.url_helpers
url_for(post.images)
url_for(post.images.first)
url_for(post.images.all)
url_for(post.images.first)
url_for(post.images[0])
url_for(post.images[1])
url_for(post.images[0])
exit
post = Post.last
post.images[0].attached?
post.images.attached?
post.images[1].attached?
post.images[0].attached?
post.images.attached?
include Rails.application.routes.url_helpers
post.images.attached?
url_for(post.images[0])
url_for(post.images[1])
url_for(post.images.1)
url_for(post.images.second)
url_for(post.images.first)
url_for!(post.images.first)
!!url_for(post.images.first)
!!url_for(post.images.second)
url_for(post.images.second)
url_for(post.images.first)
url_for(post.images[0])
!!url_for(post.images[0])
!!url_for(post.images[1])
url_for(post.images[0])
url_for!(post.images[0])
url_for!!(post.images[0])
!url_for(post.images[0])
!!url_for(post.images[0])
!!url_for(post.images[1])
exit
post = Post.last
post.attached?
post.images.attached?
include Rails.application.routes.url_helpers
post.images
url_for(post.images[0])
url_for(post.images[1])
url_for(post.images[2])
url_for(post.images[0])
url_for(post.images.second)
url_for(post.images.first)
exit
post = Post.last
include Rails.application.routes.url_helpers
url_for(post.images.first)
url_for(post.images.second)
url_for(post.images.all)
url_for(post.images[1])
url_for(post.images[0])
url_for(post.images)
url_for(post.images[])
url_for(post.images[0])
post.images
post.images.length
exit
include Rails.application.routes.url_helpers
Post.last
post.images
post.images[0]
post.images
Post.all
post.image
post.images
post.images.attached?
post.attached?
post.images.attached?
Post.last.images.attached?
post = Post.last
Post.last.images.attached?
post.images.attached?
post.images[0[
    post.images[0]
    exitr
exit
post = Post.last
post.images[0]
images = []
images
images << url_for(post.images[0])
url_for(post.images[0])
include Rails.application.routes.url_helpers
url_for(post.images[0])
images << url_for(post.images[0])
images
images << url_for(post.images[1])
images << url_for(post.images[2])
images
exit
post = Post.last
post.images.attached?
post.images.length
include Rails.application.routes.url_helpers
url_for(post.images[0])
exit
User.all
user = User.first
user.posts
user = User.secons
user = User.second
user.posts
user.following
user.followed
user.followeds
user.followers
exit
user = User.second
user.following
user.following.posts
user.following.post
user.following.first
user.following.first.posts
user.following
exit
Post.find(47)
post = Post.find(47)
post.images
post.images.1
post.images.first
post.images.find(1)
post.images.all
post.images.find(18)
post.images.find(18).purge
exit
post = Post.find(47)
post.images.all
post.images.find(17)
post
post.images.first
image = post.images.first
post
image
post.images.second
post.images.second = image
post.images.second
post.images.second.update
post.images.second.
a
post
post.update(images: [])
post
post.images
post.images.all
post = Post.find(46)
post.images.all
image = post.images.first
images.file
post.update(images: [image])
post.images.all
post
post.images
post.images.all
post.images.first
post.images
post.destroy
exit
Tag.all
Tag_Map.all
Tagmap.all
TagMap.all
exit
Post.all
post = Post.last
post.tags
post.tags = 'test'
post.tags << 'test'
post.tags
exit
post = Post.last
post.tags
exit
post = Post.last
post.tags
tag = "tagtest"
post.tags
post.tags << tag
tag = post.tags
tag
tag << "test"
post
post.tags
user = User.first
user.following
user2 = User.second
user
user.following << user2
user.following
post
post.tag
post.tags
Tag.all
tag = Tag.new
tag.name = "tagtest"
tag.tag_name = "tagtest"
tag
tag.save
tag
post
post.tag
post.tags
post.tags << tag
post.tags
post.tags.delete.all
post.tags.delete
post.tags
Tag.all
tag = Tag.first
tag.delete
tag.destroy
Tag.all
TagMap.all
exit
Tag.all
Tag.find_or_create_by(tag_name: "test")
Tag.all
tag = Tag.first
tag.destroy
Tag.all
exit
Tag.all
post = Post.last
post.tags
Tag.find_or_create_by(tag_name: "tag")
Tag.all
tag
tag = Tag.first
tag.destroy
tag = Tag.find_or_create_by(tag_name: "tag")
tag
post
post.tags << tag
post.tags
post
post.tags.delete
post.tags
post.tags.delete(tag_name: "tag")
post.tags.delete Tag.find_by(tag_name: "tag")
post.tags
Tag.all
tag
tag.destroy
Tag.all
exit
array = []
array.push(tag)
array.push("tag")
array.push("test")
array
array.each do |res|
  p res
end
array.each do |res|
  Tag.find_or_create_by(tag_name: res)
end
Tag.all
Tag.all.destroy
Tag.first.destory
Tag.first.delete
Tag.all.delete
Tag.first.delete
Tag.all
array
array2 = []
array2 - array
array_res = array2 - array
array
array_res
array2 = nil
array_res
array2 - array
array
array2
array2 - array
exit
post = Post.last
post.tags
exit
TagMap.all
post = Post.last
post
post.tagmaps
post.tag_maps
post.tags
exit
post = Post.last
post.tags
post
exit
Post.all
post = Post.last
post.tags
post.id
post.tags.pluck(:tag_name)
post.tags.pluck
post.tags.pluck(:id)
post.tags.pluck(:tag_name)
exit
Tag.all
tag_list = Tag.all
tag_list
tag = Tag.find_by(id: "tag")
tag = Tag.find_by(tag_name: "tag")
tag.post
tag.posts
tag.posts.all
exit
Tag.where(['tag_name LIKE ?', 'tag'])
exit
User.all
User.where(['name LIKE ?, '%test%'])
exit
User.where(['name LIKE ?', '%test%'])
exit
@like = Like.new(post_id: "40", user_id: "1")
Like.all
@like
@like.save
Like.all
user = User.find(1)
user.likes
user.likes.post
user.likes.posts
user.likes
user
user.likes
user.liked_post
user.liked_posts
post = Post.find(40)
post.likes
post.likes.count
post.liked_users
post = Post.find(40)
post
user.liked_posts.include?(post)
user
user.liked_posts
post.liked_users
post.likes.count
exit
user = User.first
user.posts
user.posts.first
user.posts.first.images
exit
post = Post.last
post.images
post.images.all
post.images.destroy
post.images.delete
post.images.all
images = post.images.all
images.delete
images.destroy
images
post.update(images: nil)
post
post.images
post.images.all
post.images
post = Post.first
post.images
post.images.all
post = Post.second
post.images
post.images.all
post = Post.find(15)
post.images.all
exit
Tag.all
tag = Tag.find(14)
tag.destroy
exit
